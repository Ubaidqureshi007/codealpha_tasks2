# codealpha_tasks2
# Install Required Libraries
!pip install torch torchvision opencv-python pillow
!pip install git+https://github.com/ultralytics/yolov5.git

# Upload a Video File
from google.colab import files

uploaded = files.upload()
video_path = list(uploaded.keys())[0]
print(f"Uploaded video: {video_path}")

# Step Load YOLOv5 Model
import torch

model = torch.hub.load('ultralytics/yolov5', 'yolov5s')  # Load YOLOv5 small model

# Process the Video for Object Detection
import cv2
from google.colab.patches import cv2_imshow

# Open the uploaded video
cap = cv2.VideoCapture(video_path)

if not cap.isOpened():
    raise IOError(f"Cannot open video file: {video_path}")

# Loop through the video frames
while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break  # Exit the loop if no more frames are available

    # Convert frame to RGB (YOLOv5 expects RGB images)
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

    # Perform object detection
    results = model(rgb_frame)

    # Render the detections on the frame
    rendered_frame = results.render()[0]

    # Convert the rendered frame back to BGR for display
    bgr_frame = cv2.cvtColor(rendered_frame, cv2.COLOR_RGB2BGR)

    # Display the frame with detections
    cv2_imshow(bgr_frame)

    # Break the loop if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the video capture object and close all windows
cap.release()
cv2.destroyAllWindows()
